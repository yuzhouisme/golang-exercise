// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.8
// source: api/order/service/v1/order.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetOrderReq) Reset() {
	*x = GetOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_order_service_v1_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderReq) ProtoMessage() {}

func (x *GetOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_service_v1_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderReq.ProtoReflect.Descriptor instead.
func (*GetOrderReq) Descriptor() ([]byte, []int) {
	return file_api_order_service_v1_order_proto_rawDescGZIP(), []int{0}
}

func (x *GetOrderReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetOrderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AgentId         string  `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	DeveloperId     string  `protobuf:"bytes,3,opt,name=developer_id,json=developerId,proto3" json:"developer_id,omitempty"`
	RoomNo          string  `protobuf:"bytes,4,opt,name=room_no,json=roomNo,proto3" json:"room_no,omitempty"`
	Buyer           string  `protobuf:"bytes,5,opt,name=buyer,proto3" json:"buyer,omitempty"`
	FinalPrice      float64 `protobuf:"fixed64,6,opt,name=final_price,json=finalPrice,proto3" json:"final_price,omitempty"`
	ActualPrice     float64 `protobuf:"fixed64,7,opt,name=actual_price,json=actualPrice,proto3" json:"actual_price,omitempty"`
	DepositDate     int64   `protobuf:"varint,8,opt,name=deposit_date,json=depositDate,proto3" json:"deposit_date,omitempty"`
	TransactionDate int64   `protobuf:"varint,9,opt,name=transaction_date,json=transactionDate,proto3" json:"transaction_date,omitempty"`
	FeeScale        float64 `protobuf:"fixed64,10,opt,name=fee_scale,json=feeScale,proto3" json:"fee_scale,omitempty"`
	DischargeFee    float64 `protobuf:"fixed64,11,opt,name=discharge_fee,json=dischargeFee,proto3" json:"discharge_fee,omitempty"`
	ForwardFee      float64 `protobuf:"fixed64,12,opt,name=forward_fee,json=forwardFee,proto3" json:"forward_fee,omitempty"`
	ReceivableFee   float64 `protobuf:"fixed64,13,opt,name=receivable_fee,json=receivableFee,proto3" json:"receivable_fee,omitempty"`
	Invoiced        float64 `protobuf:"fixed64,14,opt,name=invoiced,proto3" json:"invoiced,omitempty"`
	NotInvoiced     float64 `protobuf:"fixed64,15,opt,name=not_invoiced,json=notInvoiced,proto3" json:"not_invoiced,omitempty"`
	Received        float64 `protobuf:"fixed64,16,opt,name=received,proto3" json:"received,omitempty"`
	NotReceived     float64 `protobuf:"fixed64,17,opt,name=not_received,json=notReceived,proto3" json:"not_received,omitempty"`
	Status          string  `protobuf:"bytes,18,opt,name=status,proto3" json:"status,omitempty"`
	Reserve         string  `protobuf:"bytes,19,opt,name=reserve,proto3" json:"reserve,omitempty"`
	ReservePrice    float64 `protobuf:"fixed64,20,opt,name=reserve_price,json=reservePrice,proto3" json:"reserve_price,omitempty"`
	Remark          string  `protobuf:"bytes,21,opt,name=remark,proto3" json:"remark,omitempty"`
	Paper           string  `protobuf:"bytes,22,opt,name=paper,proto3" json:"paper,omitempty"`
}

func (x *GetOrderReply) Reset() {
	*x = GetOrderReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_order_service_v1_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderReply) ProtoMessage() {}

func (x *GetOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_service_v1_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderReply.ProtoReflect.Descriptor instead.
func (*GetOrderReply) Descriptor() ([]byte, []int) {
	return file_api_order_service_v1_order_proto_rawDescGZIP(), []int{1}
}

func (x *GetOrderReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetOrderReply) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *GetOrderReply) GetDeveloperId() string {
	if x != nil {
		return x.DeveloperId
	}
	return ""
}

func (x *GetOrderReply) GetRoomNo() string {
	if x != nil {
		return x.RoomNo
	}
	return ""
}

func (x *GetOrderReply) GetBuyer() string {
	if x != nil {
		return x.Buyer
	}
	return ""
}

func (x *GetOrderReply) GetFinalPrice() float64 {
	if x != nil {
		return x.FinalPrice
	}
	return 0
}

func (x *GetOrderReply) GetActualPrice() float64 {
	if x != nil {
		return x.ActualPrice
	}
	return 0
}

func (x *GetOrderReply) GetDepositDate() int64 {
	if x != nil {
		return x.DepositDate
	}
	return 0
}

func (x *GetOrderReply) GetTransactionDate() int64 {
	if x != nil {
		return x.TransactionDate
	}
	return 0
}

func (x *GetOrderReply) GetFeeScale() float64 {
	if x != nil {
		return x.FeeScale
	}
	return 0
}

func (x *GetOrderReply) GetDischargeFee() float64 {
	if x != nil {
		return x.DischargeFee
	}
	return 0
}

func (x *GetOrderReply) GetForwardFee() float64 {
	if x != nil {
		return x.ForwardFee
	}
	return 0
}

func (x *GetOrderReply) GetReceivableFee() float64 {
	if x != nil {
		return x.ReceivableFee
	}
	return 0
}

func (x *GetOrderReply) GetInvoiced() float64 {
	if x != nil {
		return x.Invoiced
	}
	return 0
}

func (x *GetOrderReply) GetNotInvoiced() float64 {
	if x != nil {
		return x.NotInvoiced
	}
	return 0
}

func (x *GetOrderReply) GetReceived() float64 {
	if x != nil {
		return x.Received
	}
	return 0
}

func (x *GetOrderReply) GetNotReceived() float64 {
	if x != nil {
		return x.NotReceived
	}
	return 0
}

func (x *GetOrderReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetOrderReply) GetReserve() string {
	if x != nil {
		return x.Reserve
	}
	return ""
}

func (x *GetOrderReply) GetReservePrice() float64 {
	if x != nil {
		return x.ReservePrice
	}
	return 0
}

func (x *GetOrderReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *GetOrderReply) GetPaper() string {
	if x != nil {
		return x.Paper
	}
	return ""
}

type DeleteOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteOrderReq) Reset() {
	*x = DeleteOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_order_service_v1_order_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrderReq) ProtoMessage() {}

func (x *DeleteOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_service_v1_order_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrderReq.ProtoReflect.Descriptor instead.
func (*DeleteOrderReq) Descriptor() ([]byte, []int) {
	return file_api_order_service_v1_order_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteOrderReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteOrderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteOrderReply) Reset() {
	*x = DeleteOrderReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_order_service_v1_order_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrderReply) ProtoMessage() {}

func (x *DeleteOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_service_v1_order_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrderReply.ProtoReflect.Descriptor instead.
func (*DeleteOrderReply) Descriptor() ([]byte, []int) {
	return file_api_order_service_v1_order_proto_rawDescGZIP(), []int{3}
}

type CreateOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId         string  `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	DeveloperId     string  `protobuf:"bytes,2,opt,name=developer_id,json=developerId,proto3" json:"developer_id,omitempty"`
	RoomNo          string  `protobuf:"bytes,3,opt,name=room_no,json=roomNo,proto3" json:"room_no,omitempty"`
	Buyer           string  `protobuf:"bytes,4,opt,name=buyer,proto3" json:"buyer,omitempty"`
	FinalPrice      float64 `protobuf:"fixed64,5,opt,name=final_price,json=finalPrice,proto3" json:"final_price,omitempty"`
	ActualPrice     float64 `protobuf:"fixed64,6,opt,name=actual_price,json=actualPrice,proto3" json:"actual_price,omitempty"`
	DepositDate     int64   `protobuf:"varint,7,opt,name=deposit_date,json=depositDate,proto3" json:"deposit_date,omitempty"`
	TransactionDate int64   `protobuf:"varint,8,opt,name=transaction_date,json=transactionDate,proto3" json:"transaction_date,omitempty"`
	FeeScale        float64 `protobuf:"fixed64,9,opt,name=fee_scale,json=feeScale,proto3" json:"fee_scale,omitempty"`
	DischargeFee    float64 `protobuf:"fixed64,10,opt,name=discharge_fee,json=dischargeFee,proto3" json:"discharge_fee,omitempty"`
	ForwardFee      float64 `protobuf:"fixed64,11,opt,name=forward_fee,json=forwardFee,proto3" json:"forward_fee,omitempty"`
	ReceivableFee   float64 `protobuf:"fixed64,12,opt,name=receivable_fee,json=receivableFee,proto3" json:"receivable_fee,omitempty"`
	Invoiced        float64 `protobuf:"fixed64,13,opt,name=invoiced,proto3" json:"invoiced,omitempty"`
	NotInvoiced     float64 `protobuf:"fixed64,14,opt,name=not_invoiced,json=notInvoiced,proto3" json:"not_invoiced,omitempty"`
	Received        float64 `protobuf:"fixed64,15,opt,name=received,proto3" json:"received,omitempty"`
	NotReceived     float64 `protobuf:"fixed64,16,opt,name=not_received,json=notReceived,proto3" json:"not_received,omitempty"`
	Status          string  `protobuf:"bytes,17,opt,name=status,proto3" json:"status,omitempty"`
	Reserve         string  `protobuf:"bytes,18,opt,name=reserve,proto3" json:"reserve,omitempty"`
	ReservePrice    float64 `protobuf:"fixed64,19,opt,name=reserve_price,json=reservePrice,proto3" json:"reserve_price,omitempty"`
	Remark          string  `protobuf:"bytes,20,opt,name=remark,proto3" json:"remark,omitempty"`
	Paper           string  `protobuf:"bytes,21,opt,name=paper,proto3" json:"paper,omitempty"`
}

func (x *CreateOrderReq) Reset() {
	*x = CreateOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_order_service_v1_order_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderReq) ProtoMessage() {}

func (x *CreateOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_service_v1_order_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderReq.ProtoReflect.Descriptor instead.
func (*CreateOrderReq) Descriptor() ([]byte, []int) {
	return file_api_order_service_v1_order_proto_rawDescGZIP(), []int{4}
}

func (x *CreateOrderReq) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *CreateOrderReq) GetDeveloperId() string {
	if x != nil {
		return x.DeveloperId
	}
	return ""
}

func (x *CreateOrderReq) GetRoomNo() string {
	if x != nil {
		return x.RoomNo
	}
	return ""
}

func (x *CreateOrderReq) GetBuyer() string {
	if x != nil {
		return x.Buyer
	}
	return ""
}

func (x *CreateOrderReq) GetFinalPrice() float64 {
	if x != nil {
		return x.FinalPrice
	}
	return 0
}

func (x *CreateOrderReq) GetActualPrice() float64 {
	if x != nil {
		return x.ActualPrice
	}
	return 0
}

func (x *CreateOrderReq) GetDepositDate() int64 {
	if x != nil {
		return x.DepositDate
	}
	return 0
}

func (x *CreateOrderReq) GetTransactionDate() int64 {
	if x != nil {
		return x.TransactionDate
	}
	return 0
}

func (x *CreateOrderReq) GetFeeScale() float64 {
	if x != nil {
		return x.FeeScale
	}
	return 0
}

func (x *CreateOrderReq) GetDischargeFee() float64 {
	if x != nil {
		return x.DischargeFee
	}
	return 0
}

func (x *CreateOrderReq) GetForwardFee() float64 {
	if x != nil {
		return x.ForwardFee
	}
	return 0
}

func (x *CreateOrderReq) GetReceivableFee() float64 {
	if x != nil {
		return x.ReceivableFee
	}
	return 0
}

func (x *CreateOrderReq) GetInvoiced() float64 {
	if x != nil {
		return x.Invoiced
	}
	return 0
}

func (x *CreateOrderReq) GetNotInvoiced() float64 {
	if x != nil {
		return x.NotInvoiced
	}
	return 0
}

func (x *CreateOrderReq) GetReceived() float64 {
	if x != nil {
		return x.Received
	}
	return 0
}

func (x *CreateOrderReq) GetNotReceived() float64 {
	if x != nil {
		return x.NotReceived
	}
	return 0
}

func (x *CreateOrderReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateOrderReq) GetReserve() string {
	if x != nil {
		return x.Reserve
	}
	return ""
}

func (x *CreateOrderReq) GetReservePrice() float64 {
	if x != nil {
		return x.ReservePrice
	}
	return 0
}

func (x *CreateOrderReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CreateOrderReq) GetPaper() string {
	if x != nil {
		return x.Paper
	}
	return ""
}

type CreateOrderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AgentId         string  `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	DeveloperId     string  `protobuf:"bytes,3,opt,name=developer_id,json=developerId,proto3" json:"developer_id,omitempty"`
	RoomNo          string  `protobuf:"bytes,4,opt,name=room_no,json=roomNo,proto3" json:"room_no,omitempty"`
	Buyer           string  `protobuf:"bytes,5,opt,name=buyer,proto3" json:"buyer,omitempty"`
	FinalPrice      float64 `protobuf:"fixed64,6,opt,name=final_price,json=finalPrice,proto3" json:"final_price,omitempty"`
	ActualPrice     float64 `protobuf:"fixed64,7,opt,name=actual_price,json=actualPrice,proto3" json:"actual_price,omitempty"`
	DepositDate     int64   `protobuf:"varint,8,opt,name=deposit_date,json=depositDate,proto3" json:"deposit_date,omitempty"`
	TransactionDate int64   `protobuf:"varint,9,opt,name=transaction_date,json=transactionDate,proto3" json:"transaction_date,omitempty"`
	FeeScale        float64 `protobuf:"fixed64,10,opt,name=fee_scale,json=feeScale,proto3" json:"fee_scale,omitempty"`
	DischargeFee    float64 `protobuf:"fixed64,11,opt,name=discharge_fee,json=dischargeFee,proto3" json:"discharge_fee,omitempty"`
	ForwardFee      float64 `protobuf:"fixed64,12,opt,name=forward_fee,json=forwardFee,proto3" json:"forward_fee,omitempty"`
	ReceivableFee   float64 `protobuf:"fixed64,13,opt,name=receivable_fee,json=receivableFee,proto3" json:"receivable_fee,omitempty"`
	Invoiced        float64 `protobuf:"fixed64,14,opt,name=invoiced,proto3" json:"invoiced,omitempty"`
	NotInvoiced     float64 `protobuf:"fixed64,15,opt,name=not_invoiced,json=notInvoiced,proto3" json:"not_invoiced,omitempty"`
	Received        float64 `protobuf:"fixed64,16,opt,name=received,proto3" json:"received,omitempty"`
	NotReceived     float64 `protobuf:"fixed64,17,opt,name=not_received,json=notReceived,proto3" json:"not_received,omitempty"`
	Status          string  `protobuf:"bytes,18,opt,name=status,proto3" json:"status,omitempty"`
	Reserve         string  `protobuf:"bytes,19,opt,name=reserve,proto3" json:"reserve,omitempty"`
	ReservePrice    float64 `protobuf:"fixed64,20,opt,name=reserve_price,json=reservePrice,proto3" json:"reserve_price,omitempty"`
	Remark          string  `protobuf:"bytes,21,opt,name=remark,proto3" json:"remark,omitempty"`
	Paper           string  `protobuf:"bytes,22,opt,name=paper,proto3" json:"paper,omitempty"`
}

func (x *CreateOrderReply) Reset() {
	*x = CreateOrderReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_order_service_v1_order_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderReply) ProtoMessage() {}

func (x *CreateOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_service_v1_order_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderReply.ProtoReflect.Descriptor instead.
func (*CreateOrderReply) Descriptor() ([]byte, []int) {
	return file_api_order_service_v1_order_proto_rawDescGZIP(), []int{5}
}

func (x *CreateOrderReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateOrderReply) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *CreateOrderReply) GetDeveloperId() string {
	if x != nil {
		return x.DeveloperId
	}
	return ""
}

func (x *CreateOrderReply) GetRoomNo() string {
	if x != nil {
		return x.RoomNo
	}
	return ""
}

func (x *CreateOrderReply) GetBuyer() string {
	if x != nil {
		return x.Buyer
	}
	return ""
}

func (x *CreateOrderReply) GetFinalPrice() float64 {
	if x != nil {
		return x.FinalPrice
	}
	return 0
}

func (x *CreateOrderReply) GetActualPrice() float64 {
	if x != nil {
		return x.ActualPrice
	}
	return 0
}

func (x *CreateOrderReply) GetDepositDate() int64 {
	if x != nil {
		return x.DepositDate
	}
	return 0
}

func (x *CreateOrderReply) GetTransactionDate() int64 {
	if x != nil {
		return x.TransactionDate
	}
	return 0
}

func (x *CreateOrderReply) GetFeeScale() float64 {
	if x != nil {
		return x.FeeScale
	}
	return 0
}

func (x *CreateOrderReply) GetDischargeFee() float64 {
	if x != nil {
		return x.DischargeFee
	}
	return 0
}

func (x *CreateOrderReply) GetForwardFee() float64 {
	if x != nil {
		return x.ForwardFee
	}
	return 0
}

func (x *CreateOrderReply) GetReceivableFee() float64 {
	if x != nil {
		return x.ReceivableFee
	}
	return 0
}

func (x *CreateOrderReply) GetInvoiced() float64 {
	if x != nil {
		return x.Invoiced
	}
	return 0
}

func (x *CreateOrderReply) GetNotInvoiced() float64 {
	if x != nil {
		return x.NotInvoiced
	}
	return 0
}

func (x *CreateOrderReply) GetReceived() float64 {
	if x != nil {
		return x.Received
	}
	return 0
}

func (x *CreateOrderReply) GetNotReceived() float64 {
	if x != nil {
		return x.NotReceived
	}
	return 0
}

func (x *CreateOrderReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateOrderReply) GetReserve() string {
	if x != nil {
		return x.Reserve
	}
	return ""
}

func (x *CreateOrderReply) GetReservePrice() float64 {
	if x != nil {
		return x.ReservePrice
	}
	return 0
}

func (x *CreateOrderReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CreateOrderReply) GetPaper() string {
	if x != nil {
		return x.Paper
	}
	return ""
}

type UpdateOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AgentId         string  `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	DeveloperId     string  `protobuf:"bytes,3,opt,name=developer_id,json=developerId,proto3" json:"developer_id,omitempty"`
	RoomNo          string  `protobuf:"bytes,4,opt,name=room_no,json=roomNo,proto3" json:"room_no,omitempty"`
	Buyer           string  `protobuf:"bytes,5,opt,name=buyer,proto3" json:"buyer,omitempty"`
	FinalPrice      float64 `protobuf:"fixed64,6,opt,name=final_price,json=finalPrice,proto3" json:"final_price,omitempty"`
	ActualPrice     float64 `protobuf:"fixed64,7,opt,name=actual_price,json=actualPrice,proto3" json:"actual_price,omitempty"`
	DepositDate     int64   `protobuf:"varint,8,opt,name=deposit_date,json=depositDate,proto3" json:"deposit_date,omitempty"`
	TransactionDate int64   `protobuf:"varint,9,opt,name=transaction_date,json=transactionDate,proto3" json:"transaction_date,omitempty"`
	FeeScale        float64 `protobuf:"fixed64,10,opt,name=fee_scale,json=feeScale,proto3" json:"fee_scale,omitempty"`
	DischargeFee    float64 `protobuf:"fixed64,11,opt,name=discharge_fee,json=dischargeFee,proto3" json:"discharge_fee,omitempty"`
	ForwardFee      float64 `protobuf:"fixed64,12,opt,name=forward_fee,json=forwardFee,proto3" json:"forward_fee,omitempty"`
	ReceivableFee   float64 `protobuf:"fixed64,13,opt,name=receivable_fee,json=receivableFee,proto3" json:"receivable_fee,omitempty"`
	Invoiced        float64 `protobuf:"fixed64,14,opt,name=invoiced,proto3" json:"invoiced,omitempty"`
	NotInvoiced     float64 `protobuf:"fixed64,15,opt,name=not_invoiced,json=notInvoiced,proto3" json:"not_invoiced,omitempty"`
	Received        float64 `protobuf:"fixed64,16,opt,name=received,proto3" json:"received,omitempty"`
	NotReceived     float64 `protobuf:"fixed64,17,opt,name=not_received,json=notReceived,proto3" json:"not_received,omitempty"`
	Status          string  `protobuf:"bytes,18,opt,name=status,proto3" json:"status,omitempty"`
	Reserve         string  `protobuf:"bytes,19,opt,name=reserve,proto3" json:"reserve,omitempty"`
	ReservePrice    float64 `protobuf:"fixed64,20,opt,name=reserve_price,json=reservePrice,proto3" json:"reserve_price,omitempty"`
	Remark          string  `protobuf:"bytes,21,opt,name=remark,proto3" json:"remark,omitempty"`
	Paper           string  `protobuf:"bytes,22,opt,name=paper,proto3" json:"paper,omitempty"`
}

func (x *UpdateOrderReq) Reset() {
	*x = UpdateOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_order_service_v1_order_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderReq) ProtoMessage() {}

func (x *UpdateOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_service_v1_order_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderReq.ProtoReflect.Descriptor instead.
func (*UpdateOrderReq) Descriptor() ([]byte, []int) {
	return file_api_order_service_v1_order_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateOrderReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateOrderReq) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *UpdateOrderReq) GetDeveloperId() string {
	if x != nil {
		return x.DeveloperId
	}
	return ""
}

func (x *UpdateOrderReq) GetRoomNo() string {
	if x != nil {
		return x.RoomNo
	}
	return ""
}

func (x *UpdateOrderReq) GetBuyer() string {
	if x != nil {
		return x.Buyer
	}
	return ""
}

func (x *UpdateOrderReq) GetFinalPrice() float64 {
	if x != nil {
		return x.FinalPrice
	}
	return 0
}

func (x *UpdateOrderReq) GetActualPrice() float64 {
	if x != nil {
		return x.ActualPrice
	}
	return 0
}

func (x *UpdateOrderReq) GetDepositDate() int64 {
	if x != nil {
		return x.DepositDate
	}
	return 0
}

func (x *UpdateOrderReq) GetTransactionDate() int64 {
	if x != nil {
		return x.TransactionDate
	}
	return 0
}

func (x *UpdateOrderReq) GetFeeScale() float64 {
	if x != nil {
		return x.FeeScale
	}
	return 0
}

func (x *UpdateOrderReq) GetDischargeFee() float64 {
	if x != nil {
		return x.DischargeFee
	}
	return 0
}

func (x *UpdateOrderReq) GetForwardFee() float64 {
	if x != nil {
		return x.ForwardFee
	}
	return 0
}

func (x *UpdateOrderReq) GetReceivableFee() float64 {
	if x != nil {
		return x.ReceivableFee
	}
	return 0
}

func (x *UpdateOrderReq) GetInvoiced() float64 {
	if x != nil {
		return x.Invoiced
	}
	return 0
}

func (x *UpdateOrderReq) GetNotInvoiced() float64 {
	if x != nil {
		return x.NotInvoiced
	}
	return 0
}

func (x *UpdateOrderReq) GetReceived() float64 {
	if x != nil {
		return x.Received
	}
	return 0
}

func (x *UpdateOrderReq) GetNotReceived() float64 {
	if x != nil {
		return x.NotReceived
	}
	return 0
}

func (x *UpdateOrderReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateOrderReq) GetReserve() string {
	if x != nil {
		return x.Reserve
	}
	return ""
}

func (x *UpdateOrderReq) GetReservePrice() float64 {
	if x != nil {
		return x.ReservePrice
	}
	return 0
}

func (x *UpdateOrderReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateOrderReq) GetPaper() string {
	if x != nil {
		return x.Paper
	}
	return ""
}

type UpdateOrderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AgentId         string  `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	DeveloperId     string  `protobuf:"bytes,3,opt,name=developer_id,json=developerId,proto3" json:"developer_id,omitempty"`
	RoomNo          string  `protobuf:"bytes,4,opt,name=room_no,json=roomNo,proto3" json:"room_no,omitempty"`
	Buyer           string  `protobuf:"bytes,5,opt,name=buyer,proto3" json:"buyer,omitempty"`
	FinalPrice      float64 `protobuf:"fixed64,6,opt,name=final_price,json=finalPrice,proto3" json:"final_price,omitempty"`
	ActualPrice     float64 `protobuf:"fixed64,7,opt,name=actual_price,json=actualPrice,proto3" json:"actual_price,omitempty"`
	DepositDate     int64   `protobuf:"varint,8,opt,name=deposit_date,json=depositDate,proto3" json:"deposit_date,omitempty"`
	TransactionDate int64   `protobuf:"varint,9,opt,name=transaction_date,json=transactionDate,proto3" json:"transaction_date,omitempty"`
	FeeScale        float64 `protobuf:"fixed64,10,opt,name=fee_scale,json=feeScale,proto3" json:"fee_scale,omitempty"`
	DischargeFee    float64 `protobuf:"fixed64,11,opt,name=discharge_fee,json=dischargeFee,proto3" json:"discharge_fee,omitempty"`
	ForwardFee      float64 `protobuf:"fixed64,12,opt,name=forward_fee,json=forwardFee,proto3" json:"forward_fee,omitempty"`
	ReceivableFee   float64 `protobuf:"fixed64,13,opt,name=receivable_fee,json=receivableFee,proto3" json:"receivable_fee,omitempty"`
	Invoiced        float64 `protobuf:"fixed64,14,opt,name=invoiced,proto3" json:"invoiced,omitempty"`
	NotInvoiced     float64 `protobuf:"fixed64,15,opt,name=not_invoiced,json=notInvoiced,proto3" json:"not_invoiced,omitempty"`
	Received        float64 `protobuf:"fixed64,16,opt,name=received,proto3" json:"received,omitempty"`
	NotReceived     float64 `protobuf:"fixed64,17,opt,name=not_received,json=notReceived,proto3" json:"not_received,omitempty"`
	Status          string  `protobuf:"bytes,18,opt,name=status,proto3" json:"status,omitempty"`
	Reserve         string  `protobuf:"bytes,19,opt,name=reserve,proto3" json:"reserve,omitempty"`
	ReservePrice    float64 `protobuf:"fixed64,20,opt,name=reserve_price,json=reservePrice,proto3" json:"reserve_price,omitempty"`
	Remark          string  `protobuf:"bytes,21,opt,name=remark,proto3" json:"remark,omitempty"`
	Paper           string  `protobuf:"bytes,22,opt,name=paper,proto3" json:"paper,omitempty"`
}

func (x *UpdateOrderReply) Reset() {
	*x = UpdateOrderReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_order_service_v1_order_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderReply) ProtoMessage() {}

func (x *UpdateOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_service_v1_order_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderReply.ProtoReflect.Descriptor instead.
func (*UpdateOrderReply) Descriptor() ([]byte, []int) {
	return file_api_order_service_v1_order_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateOrderReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateOrderReply) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *UpdateOrderReply) GetDeveloperId() string {
	if x != nil {
		return x.DeveloperId
	}
	return ""
}

func (x *UpdateOrderReply) GetRoomNo() string {
	if x != nil {
		return x.RoomNo
	}
	return ""
}

func (x *UpdateOrderReply) GetBuyer() string {
	if x != nil {
		return x.Buyer
	}
	return ""
}

func (x *UpdateOrderReply) GetFinalPrice() float64 {
	if x != nil {
		return x.FinalPrice
	}
	return 0
}

func (x *UpdateOrderReply) GetActualPrice() float64 {
	if x != nil {
		return x.ActualPrice
	}
	return 0
}

func (x *UpdateOrderReply) GetDepositDate() int64 {
	if x != nil {
		return x.DepositDate
	}
	return 0
}

func (x *UpdateOrderReply) GetTransactionDate() int64 {
	if x != nil {
		return x.TransactionDate
	}
	return 0
}

func (x *UpdateOrderReply) GetFeeScale() float64 {
	if x != nil {
		return x.FeeScale
	}
	return 0
}

func (x *UpdateOrderReply) GetDischargeFee() float64 {
	if x != nil {
		return x.DischargeFee
	}
	return 0
}

func (x *UpdateOrderReply) GetForwardFee() float64 {
	if x != nil {
		return x.ForwardFee
	}
	return 0
}

func (x *UpdateOrderReply) GetReceivableFee() float64 {
	if x != nil {
		return x.ReceivableFee
	}
	return 0
}

func (x *UpdateOrderReply) GetInvoiced() float64 {
	if x != nil {
		return x.Invoiced
	}
	return 0
}

func (x *UpdateOrderReply) GetNotInvoiced() float64 {
	if x != nil {
		return x.NotInvoiced
	}
	return 0
}

func (x *UpdateOrderReply) GetReceived() float64 {
	if x != nil {
		return x.Received
	}
	return 0
}

func (x *UpdateOrderReply) GetNotReceived() float64 {
	if x != nil {
		return x.NotReceived
	}
	return 0
}

func (x *UpdateOrderReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateOrderReply) GetReserve() string {
	if x != nil {
		return x.Reserve
	}
	return ""
}

func (x *UpdateOrderReply) GetReservePrice() float64 {
	if x != nil {
		return x.ReservePrice
	}
	return 0
}

func (x *UpdateOrderReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateOrderReply) GetPaper() string {
	if x != nil {
		return x.Paper
	}
	return ""
}

type ListOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int64 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListOrderReq) Reset() {
	*x = ListOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_order_service_v1_order_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrderReq) ProtoMessage() {}

func (x *ListOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_service_v1_order_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrderReq.ProtoReflect.Descriptor instead.
func (*ListOrderReq) Descriptor() ([]byte, []int) {
	return file_api_order_service_v1_order_proto_rawDescGZIP(), []int{8}
}

func (x *ListOrderReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListOrderReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListOrderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*ListOrderReply_Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *ListOrderReply) Reset() {
	*x = ListOrderReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_order_service_v1_order_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrderReply) ProtoMessage() {}

func (x *ListOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_service_v1_order_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrderReply.ProtoReflect.Descriptor instead.
func (*ListOrderReply) Descriptor() ([]byte, []int) {
	return file_api_order_service_v1_order_proto_rawDescGZIP(), []int{9}
}

func (x *ListOrderReply) GetOrders() []*ListOrderReply_Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

type SearchOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId     string   `protobuf:"bytes,1,opt,name=developer_id,json=developerId,proto3" json:"developer_id,omitempty"`
	AgentId         string   `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	RoomNo          string   `protobuf:"bytes,3,opt,name=room_no,json=roomNo,proto3" json:"room_no,omitempty"`
	Buyer           string   `protobuf:"bytes,4,opt,name=buyer,proto3" json:"buyer,omitempty"`
	DepositDate     []string `protobuf:"bytes,5,rep,name=deposit_date,json=depositDate,proto3" json:"deposit_date,omitempty"`
	TransactionDate []string `protobuf:"bytes,6,rep,name=transaction_date,json=transactionDate,proto3" json:"transaction_date,omitempty"`
	Status          string   `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	Reserve         string   `protobuf:"bytes,8,opt,name=reserve,proto3" json:"reserve,omitempty"`
	PageNum         int64    `protobuf:"varint,9,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize        int64    `protobuf:"varint,10,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Sort            []string `protobuf:"bytes,11,rep,name=sort,proto3" json:"sort,omitempty"`
}

func (x *SearchOrderReq) Reset() {
	*x = SearchOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_order_service_v1_order_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchOrderReq) ProtoMessage() {}

func (x *SearchOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_service_v1_order_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchOrderReq.ProtoReflect.Descriptor instead.
func (*SearchOrderReq) Descriptor() ([]byte, []int) {
	return file_api_order_service_v1_order_proto_rawDescGZIP(), []int{10}
}

func (x *SearchOrderReq) GetDeveloperId() string {
	if x != nil {
		return x.DeveloperId
	}
	return ""
}

func (x *SearchOrderReq) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *SearchOrderReq) GetRoomNo() string {
	if x != nil {
		return x.RoomNo
	}
	return ""
}

func (x *SearchOrderReq) GetBuyer() string {
	if x != nil {
		return x.Buyer
	}
	return ""
}

func (x *SearchOrderReq) GetDepositDate() []string {
	if x != nil {
		return x.DepositDate
	}
	return nil
}

func (x *SearchOrderReq) GetTransactionDate() []string {
	if x != nil {
		return x.TransactionDate
	}
	return nil
}

func (x *SearchOrderReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SearchOrderReq) GetReserve() string {
	if x != nil {
		return x.Reserve
	}
	return ""
}

func (x *SearchOrderReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *SearchOrderReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SearchOrderReq) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

type SearchOrderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*SearchOrderReply_Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *SearchOrderReply) Reset() {
	*x = SearchOrderReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_order_service_v1_order_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchOrderReply) ProtoMessage() {}

func (x *SearchOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_service_v1_order_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchOrderReply.ProtoReflect.Descriptor instead.
func (*SearchOrderReply) Descriptor() ([]byte, []int) {
	return file_api_order_service_v1_order_proto_rawDescGZIP(), []int{11}
}

func (x *SearchOrderReply) GetOrders() []*SearchOrderReply_Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

type ListOrderReply_Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AgentId         string  `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	DeveloperId     string  `protobuf:"bytes,3,opt,name=developer_id,json=developerId,proto3" json:"developer_id,omitempty"`
	RoomNo          string  `protobuf:"bytes,4,opt,name=room_no,json=roomNo,proto3" json:"room_no,omitempty"`
	Buyer           string  `protobuf:"bytes,5,opt,name=buyer,proto3" json:"buyer,omitempty"`
	FinalPrice      float64 `protobuf:"fixed64,6,opt,name=final_price,json=finalPrice,proto3" json:"final_price,omitempty"`
	ActualPrice     float64 `protobuf:"fixed64,7,opt,name=actual_price,json=actualPrice,proto3" json:"actual_price,omitempty"`
	DepositDate     int64   `protobuf:"varint,8,opt,name=deposit_date,json=depositDate,proto3" json:"deposit_date,omitempty"`
	TransactionDate int64   `protobuf:"varint,9,opt,name=transaction_date,json=transactionDate,proto3" json:"transaction_date,omitempty"`
	FeeScale        float64 `protobuf:"fixed64,10,opt,name=fee_scale,json=feeScale,proto3" json:"fee_scale,omitempty"`
	DischargeFee    float64 `protobuf:"fixed64,11,opt,name=discharge_fee,json=dischargeFee,proto3" json:"discharge_fee,omitempty"`
	ForwardFee      float64 `protobuf:"fixed64,12,opt,name=forward_fee,json=forwardFee,proto3" json:"forward_fee,omitempty"`
	ReceivableFee   float64 `protobuf:"fixed64,13,opt,name=receivable_fee,json=receivableFee,proto3" json:"receivable_fee,omitempty"`
	Invoiced        float64 `protobuf:"fixed64,14,opt,name=invoiced,proto3" json:"invoiced,omitempty"`
	NotInvoiced     float64 `protobuf:"fixed64,15,opt,name=not_invoiced,json=notInvoiced,proto3" json:"not_invoiced,omitempty"`
	Received        float64 `protobuf:"fixed64,16,opt,name=received,proto3" json:"received,omitempty"`
	NotReceived     float64 `protobuf:"fixed64,17,opt,name=not_received,json=notReceived,proto3" json:"not_received,omitempty"`
	Status          string  `protobuf:"bytes,18,opt,name=status,proto3" json:"status,omitempty"`
	Reserve         string  `protobuf:"bytes,19,opt,name=reserve,proto3" json:"reserve,omitempty"`
	ReservePrice    float64 `protobuf:"fixed64,20,opt,name=reserve_price,json=reservePrice,proto3" json:"reserve_price,omitempty"`
	Remark          string  `protobuf:"bytes,21,opt,name=remark,proto3" json:"remark,omitempty"`
	Paper           string  `protobuf:"bytes,22,opt,name=paper,proto3" json:"paper,omitempty"`
}

func (x *ListOrderReply_Order) Reset() {
	*x = ListOrderReply_Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_order_service_v1_order_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrderReply_Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrderReply_Order) ProtoMessage() {}

func (x *ListOrderReply_Order) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_service_v1_order_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrderReply_Order.ProtoReflect.Descriptor instead.
func (*ListOrderReply_Order) Descriptor() ([]byte, []int) {
	return file_api_order_service_v1_order_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ListOrderReply_Order) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListOrderReply_Order) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ListOrderReply_Order) GetDeveloperId() string {
	if x != nil {
		return x.DeveloperId
	}
	return ""
}

func (x *ListOrderReply_Order) GetRoomNo() string {
	if x != nil {
		return x.RoomNo
	}
	return ""
}

func (x *ListOrderReply_Order) GetBuyer() string {
	if x != nil {
		return x.Buyer
	}
	return ""
}

func (x *ListOrderReply_Order) GetFinalPrice() float64 {
	if x != nil {
		return x.FinalPrice
	}
	return 0
}

func (x *ListOrderReply_Order) GetActualPrice() float64 {
	if x != nil {
		return x.ActualPrice
	}
	return 0
}

func (x *ListOrderReply_Order) GetDepositDate() int64 {
	if x != nil {
		return x.DepositDate
	}
	return 0
}

func (x *ListOrderReply_Order) GetTransactionDate() int64 {
	if x != nil {
		return x.TransactionDate
	}
	return 0
}

func (x *ListOrderReply_Order) GetFeeScale() float64 {
	if x != nil {
		return x.FeeScale
	}
	return 0
}

func (x *ListOrderReply_Order) GetDischargeFee() float64 {
	if x != nil {
		return x.DischargeFee
	}
	return 0
}

func (x *ListOrderReply_Order) GetForwardFee() float64 {
	if x != nil {
		return x.ForwardFee
	}
	return 0
}

func (x *ListOrderReply_Order) GetReceivableFee() float64 {
	if x != nil {
		return x.ReceivableFee
	}
	return 0
}

func (x *ListOrderReply_Order) GetInvoiced() float64 {
	if x != nil {
		return x.Invoiced
	}
	return 0
}

func (x *ListOrderReply_Order) GetNotInvoiced() float64 {
	if x != nil {
		return x.NotInvoiced
	}
	return 0
}

func (x *ListOrderReply_Order) GetReceived() float64 {
	if x != nil {
		return x.Received
	}
	return 0
}

func (x *ListOrderReply_Order) GetNotReceived() float64 {
	if x != nil {
		return x.NotReceived
	}
	return 0
}

func (x *ListOrderReply_Order) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListOrderReply_Order) GetReserve() string {
	if x != nil {
		return x.Reserve
	}
	return ""
}

func (x *ListOrderReply_Order) GetReservePrice() float64 {
	if x != nil {
		return x.ReservePrice
	}
	return 0
}

func (x *ListOrderReply_Order) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ListOrderReply_Order) GetPaper() string {
	if x != nil {
		return x.Paper
	}
	return ""
}

type SearchOrderReply_Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ClientId        string  `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Type            string  `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	RoomNo          string  `protobuf:"bytes,4,opt,name=room_no,json=roomNo,proto3" json:"room_no,omitempty"`
	Buyer           string  `protobuf:"bytes,5,opt,name=buyer,proto3" json:"buyer,omitempty"`
	FinalPrice      float64 `protobuf:"fixed64,6,opt,name=final_price,json=finalPrice,proto3" json:"final_price,omitempty"`
	ActualPrice     float64 `protobuf:"fixed64,7,opt,name=actual_price,json=actualPrice,proto3" json:"actual_price,omitempty"`
	DepositDate     int64   `protobuf:"varint,8,opt,name=deposit_date,json=depositDate,proto3" json:"deposit_date,omitempty"`
	TransactionDate int64   `protobuf:"varint,9,opt,name=transaction_date,json=transactionDate,proto3" json:"transaction_date,omitempty"`
	FeeScale        float64 `protobuf:"fixed64,10,opt,name=fee_scale,json=feeScale,proto3" json:"fee_scale,omitempty"`
	DischargeFee    float64 `protobuf:"fixed64,11,opt,name=discharge_fee,json=dischargeFee,proto3" json:"discharge_fee,omitempty"`
	ForwardFee      float64 `protobuf:"fixed64,12,opt,name=forward_fee,json=forwardFee,proto3" json:"forward_fee,omitempty"`
	ReceivableFee   float64 `protobuf:"fixed64,13,opt,name=receivable_fee,json=receivableFee,proto3" json:"receivable_fee,omitempty"`
	Invoiced        float64 `protobuf:"fixed64,14,opt,name=invoiced,proto3" json:"invoiced,omitempty"`
	NotInvoiced     float64 `protobuf:"fixed64,15,opt,name=not_invoiced,json=notInvoiced,proto3" json:"not_invoiced,omitempty"`
	Received        float64 `protobuf:"fixed64,16,opt,name=received,proto3" json:"received,omitempty"`
	NotReceived     float64 `protobuf:"fixed64,17,opt,name=not_received,json=notReceived,proto3" json:"not_received,omitempty"`
	Status          string  `protobuf:"bytes,18,opt,name=status,proto3" json:"status,omitempty"`
	Reserve         string  `protobuf:"bytes,19,opt,name=reserve,proto3" json:"reserve,omitempty"`
	ReservePrice    float64 `protobuf:"fixed64,20,opt,name=reserve_price,json=reservePrice,proto3" json:"reserve_price,omitempty"`
	Remark          string  `protobuf:"bytes,21,opt,name=remark,proto3" json:"remark,omitempty"`
	Paper           string  `protobuf:"bytes,22,opt,name=paper,proto3" json:"paper,omitempty"`
}

func (x *SearchOrderReply_Order) Reset() {
	*x = SearchOrderReply_Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_order_service_v1_order_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchOrderReply_Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchOrderReply_Order) ProtoMessage() {}

func (x *SearchOrderReply_Order) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_service_v1_order_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchOrderReply_Order.ProtoReflect.Descriptor instead.
func (*SearchOrderReply_Order) Descriptor() ([]byte, []int) {
	return file_api_order_service_v1_order_proto_rawDescGZIP(), []int{11, 0}
}

func (x *SearchOrderReply_Order) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchOrderReply_Order) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *SearchOrderReply_Order) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SearchOrderReply_Order) GetRoomNo() string {
	if x != nil {
		return x.RoomNo
	}
	return ""
}

func (x *SearchOrderReply_Order) GetBuyer() string {
	if x != nil {
		return x.Buyer
	}
	return ""
}

func (x *SearchOrderReply_Order) GetFinalPrice() float64 {
	if x != nil {
		return x.FinalPrice
	}
	return 0
}

func (x *SearchOrderReply_Order) GetActualPrice() float64 {
	if x != nil {
		return x.ActualPrice
	}
	return 0
}

func (x *SearchOrderReply_Order) GetDepositDate() int64 {
	if x != nil {
		return x.DepositDate
	}
	return 0
}

func (x *SearchOrderReply_Order) GetTransactionDate() int64 {
	if x != nil {
		return x.TransactionDate
	}
	return 0
}

func (x *SearchOrderReply_Order) GetFeeScale() float64 {
	if x != nil {
		return x.FeeScale
	}
	return 0
}

func (x *SearchOrderReply_Order) GetDischargeFee() float64 {
	if x != nil {
		return x.DischargeFee
	}
	return 0
}

func (x *SearchOrderReply_Order) GetForwardFee() float64 {
	if x != nil {
		return x.ForwardFee
	}
	return 0
}

func (x *SearchOrderReply_Order) GetReceivableFee() float64 {
	if x != nil {
		return x.ReceivableFee
	}
	return 0
}

func (x *SearchOrderReply_Order) GetInvoiced() float64 {
	if x != nil {
		return x.Invoiced
	}
	return 0
}

func (x *SearchOrderReply_Order) GetNotInvoiced() float64 {
	if x != nil {
		return x.NotInvoiced
	}
	return 0
}

func (x *SearchOrderReply_Order) GetReceived() float64 {
	if x != nil {
		return x.Received
	}
	return 0
}

func (x *SearchOrderReply_Order) GetNotReceived() float64 {
	if x != nil {
		return x.NotReceived
	}
	return 0
}

func (x *SearchOrderReply_Order) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SearchOrderReply_Order) GetReserve() string {
	if x != nil {
		return x.Reserve
	}
	return ""
}

func (x *SearchOrderReply_Order) GetReservePrice() float64 {
	if x != nil {
		return x.ReservePrice
	}
	return 0
}

func (x *SearchOrderReply_Order) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SearchOrderReply_Order) GetPaper() string {
	if x != nil {
		return x.Paper
	}
	return ""
}

var File_api_order_service_v1_order_proto protoreflect.FileDescriptor

var file_api_order_service_v1_order_proto_rawDesc = []byte{
	0x0a, 0x20, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x1d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xab, 0x05, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75,
	0x79, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x75, 0x79, 0x65, 0x72,
	0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x66, 0x65, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x66, 0x65, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x46, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f,
	0x66, 0x65, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x46, 0x65, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x65, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x5f,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x6e, 0x6f, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x5f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6e,
	0x6f, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x70,
	0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x70, 0x65, 0x72, 0x22,
	0x20, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x12, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x9c, 0x05, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6e,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x62, 0x75, 0x79, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x62, 0x75, 0x79, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x61,
	0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x5f, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x66, 0x65, 0x65, 0x53,
	0x63, 0x61, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x69, 0x73,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x46, 0x65, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x65,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x6e, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x6e, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x70, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x61, 0x70, 0x65, 0x72, 0x22, 0xae, 0x05, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x79, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x62, 0x75, 0x79, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x5f,
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x66, 0x65, 0x65,
	0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x69,
	0x73, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x46, 0x65, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x46,
	0x65, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x6e, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x61, 0x70, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x61, 0x70, 0x65, 0x72, 0x22, 0xac, 0x05, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6e,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x62, 0x75, 0x79, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x62, 0x75, 0x79, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x61,
	0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x5f, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x66, 0x65, 0x65, 0x53,
	0x63, 0x61, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x69, 0x73,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x46, 0x65, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x65,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x6e, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x6e, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x70, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x61, 0x70, 0x65, 0x72, 0x22, 0xae, 0x05, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x79, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x62, 0x75, 0x79, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x5f,
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x66, 0x65, 0x65,
	0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x69,
	0x73, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x46, 0x65, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x46,
	0x65, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x6e, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x61, 0x70, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x61, 0x70, 0x65, 0x72, 0x22, 0x46, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xf6, 0x05,
	0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x3e, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x1a, 0xa3, 0x05, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x4e,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x79, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x62, 0x75, 0x79, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x65, 0x65,
	0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x66, 0x65,
	0x65, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64,
	0x69, 0x73, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0a, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x46, 0x65, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65,
	0x46, 0x65, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x70, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x61, 0x70, 0x65, 0x72, 0x22, 0xc9, 0x02, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x79, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x62, 0x75, 0x79, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x22, 0xed, 0x05, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x40, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x96, 0x05, 0x0a, 0x05, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6e, 0x6f, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x62, 0x75, 0x79, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x75,
	0x79, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x5f, 0x73, 0x63, 0x61,
	0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x66, 0x65, 0x65, 0x53, 0x63, 0x61,
	0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f,
	0x66, 0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x46, 0x65, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x65, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e,
	0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f,
	0x74, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x61, 0x70, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x70,
	0x65, 0x72, 0x32, 0x80, 0x05, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x63, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11,
	0x12, 0x0f, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0x67, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x20, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x2a, 0x0a,
	0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x76, 0x31, 0x12, 0x6a, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x22, 0x0a, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x2f, 0x76, 0x31, 0x3a, 0x01, 0x2a, 0x12, 0x6a, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x15, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0f, 0x1a, 0x0a, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x76, 0x31, 0x3a,
	0x01, 0x2a, 0x12, 0x61, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x20, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x2f, 0x76, 0x31, 0x12, 0x6e, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x13, 0x12, 0x11, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x19, 0x5a, 0x17, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_order_service_v1_order_proto_rawDescOnce sync.Once
	file_api_order_service_v1_order_proto_rawDescData = file_api_order_service_v1_order_proto_rawDesc
)

func file_api_order_service_v1_order_proto_rawDescGZIP() []byte {
	file_api_order_service_v1_order_proto_rawDescOnce.Do(func() {
		file_api_order_service_v1_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_order_service_v1_order_proto_rawDescData)
	})
	return file_api_order_service_v1_order_proto_rawDescData
}

var file_api_order_service_v1_order_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_api_order_service_v1_order_proto_goTypes = []interface{}{
	(*GetOrderReq)(nil),            // 0: order.service.v1.GetOrderReq
	(*GetOrderReply)(nil),          // 1: order.service.v1.GetOrderReply
	(*DeleteOrderReq)(nil),         // 2: order.service.v1.DeleteOrderReq
	(*DeleteOrderReply)(nil),       // 3: order.service.v1.DeleteOrderReply
	(*CreateOrderReq)(nil),         // 4: order.service.v1.CreateOrderReq
	(*CreateOrderReply)(nil),       // 5: order.service.v1.CreateOrderReply
	(*UpdateOrderReq)(nil),         // 6: order.service.v1.UpdateOrderReq
	(*UpdateOrderReply)(nil),       // 7: order.service.v1.UpdateOrderReply
	(*ListOrderReq)(nil),           // 8: order.service.v1.ListOrderReq
	(*ListOrderReply)(nil),         // 9: order.service.v1.ListOrderReply
	(*SearchOrderReq)(nil),         // 10: order.service.v1.SearchOrderReq
	(*SearchOrderReply)(nil),       // 11: order.service.v1.SearchOrderReply
	(*ListOrderReply_Order)(nil),   // 12: order.service.v1.ListOrderReply.Order
	(*SearchOrderReply_Order)(nil), // 13: order.service.v1.SearchOrderReply.Order
}
var file_api_order_service_v1_order_proto_depIdxs = []int32{
	12, // 0: order.service.v1.ListOrderReply.orders:type_name -> order.service.v1.ListOrderReply.Order
	13, // 1: order.service.v1.SearchOrderReply.orders:type_name -> order.service.v1.SearchOrderReply.Order
	0,  // 2: order.service.v1.Order.GetOrder:input_type -> order.service.v1.GetOrderReq
	2,  // 3: order.service.v1.Order.DeleteOrder:input_type -> order.service.v1.DeleteOrderReq
	4,  // 4: order.service.v1.Order.CreateOrder:input_type -> order.service.v1.CreateOrderReq
	6,  // 5: order.service.v1.Order.UpdateOrder:input_type -> order.service.v1.UpdateOrderReq
	8,  // 6: order.service.v1.Order.ListOrder:input_type -> order.service.v1.ListOrderReq
	10, // 7: order.service.v1.Order.SearchOrder:input_type -> order.service.v1.SearchOrderReq
	1,  // 8: order.service.v1.Order.GetOrder:output_type -> order.service.v1.GetOrderReply
	3,  // 9: order.service.v1.Order.DeleteOrder:output_type -> order.service.v1.DeleteOrderReply
	5,  // 10: order.service.v1.Order.CreateOrder:output_type -> order.service.v1.CreateOrderReply
	7,  // 11: order.service.v1.Order.UpdateOrder:output_type -> order.service.v1.UpdateOrderReply
	9,  // 12: order.service.v1.Order.ListOrder:output_type -> order.service.v1.ListOrderReply
	11, // 13: order.service.v1.Order.SearchOrder:output_type -> order.service.v1.SearchOrderReply
	8,  // [8:14] is the sub-list for method output_type
	2,  // [2:8] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_api_order_service_v1_order_proto_init() }
func file_api_order_service_v1_order_proto_init() {
	if File_api_order_service_v1_order_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_order_service_v1_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_order_service_v1_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_order_service_v1_order_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_order_service_v1_order_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrderReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_order_service_v1_order_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_order_service_v1_order_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrderReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_order_service_v1_order_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_order_service_v1_order_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_order_service_v1_order_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_order_service_v1_order_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrderReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_order_service_v1_order_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_order_service_v1_order_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchOrderReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_order_service_v1_order_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrderReply_Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_order_service_v1_order_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchOrderReply_Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_order_service_v1_order_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_order_service_v1_order_proto_goTypes,
		DependencyIndexes: file_api_order_service_v1_order_proto_depIdxs,
		MessageInfos:      file_api_order_service_v1_order_proto_msgTypes,
	}.Build()
	File_api_order_service_v1_order_proto = out.File
	file_api_order_service_v1_order_proto_rawDesc = nil
	file_api_order_service_v1_order_proto_goTypes = nil
	file_api_order_service_v1_order_proto_depIdxs = nil
}
